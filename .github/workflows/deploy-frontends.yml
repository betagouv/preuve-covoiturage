name: Deploy frontends 
on:
  release:
    types: [published]
  workflow_call:
  # Remove me
  push:
    branches: [fix/flow]
jobs:
  deploy_attestation:
    name: Deploy attestation
    strategy:
      matrix:
        env: [demo, production]
    environment: ${{ matrix.env }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: attestation/package-lock.json

      - name: Install and Build üîß
        run: |
          cd attestation
          npm ci
          NODE_OPTIONS=--openssl-legacy-provider npm run build

      - name: Deploy to bucket
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ vars.ATTESTATION_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.BUCKET_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BUCKET_SECRET_KEY }}
          AWS_S3_ENDPOINT: ${{ vars.BUCKET_ENDPOINT }}
          AWS_REGION: ${{ vars.BUCKET_REGION }}
          SOURCE_DIR: 'attestation/dist/attestation'
  deploy_dashboard:
    name: Deploy dashboard
    strategy:
      matrix:
        env: [demo, production]
    environment: ${{ matrix.env }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install and Build üîß
        env:
          DEPLOY_ENV: ${{ matrix.env }}
        run: |
          cd dashboard
          cat "src/environments/environment.$DEPLOY_ENV.ts" | sed 's/export const /window./' > src/assets/env.js
          npm install 
          NODE_OPTIONS=--openssl-legacy-provider npm run build -c production

      - name: Deploy to bucket
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ vars.DASHBOARD_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.BUCKET_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BUCKET_SECRET_KEY }}
          AWS_S3_ENDPOINT: ${{ vars.BUCKET_ENDPOINT }}
          AWS_REGION: ${{ vars.BUCKET_REGION }}
          SOURCE_DIR: 'dashboard/dist/dashboard'
  deploy_techdoc:
    name: Deploy tech doc
    strategy:
      matrix:
        env: [demo, production]
    environment: ${{ matrix.env }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: doc/package-lock.json

      - name: Install and Build üîß
        run: |
          cd doc
          npm ci
          npm run gen
          NODE_OPTIONS=--openssl-legacy-provider npm run build

      - name: Deploy to bucket
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ vars.TECHDOC_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.BUCKET_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BUCKET_SECRET_KEY }}
          AWS_S3_ENDPOINT: ${{ vars.BUCKET_ENDPOINT }}
          AWS_REGION: ${{ vars.BUCKET_REGION }}
          SOURCE_DIR: 'doc/dist'