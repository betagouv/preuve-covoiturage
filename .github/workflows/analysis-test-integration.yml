name: 'Analysis - Integration test'

on:
  pull_request:
    branches: [dev]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  e2e:
    name: Test integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: api/yarn.lock

      - name: Install
        run: yarn install --frozen-lockfile --non-interactive
        working-directory: api

      - name: Build
        run: yarn build
        env:
          NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
        working-directory: api

      - name: Add host entries
        run: | 
          sudo echo "127.0.0.1 api.covoiturage.test" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 s3.covoiturage.test" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 download.covoiturage.test" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 local-pdc-export.s3.covoiturage.test" | sudo tee -a /etc/hosts

      - name: Enable ilos cli
        run: | 
          rm -Rf ./proxy/node_modules/
          yarn install
        working-directory: api
        
      - name: Run integration tests
        env:
          APP_POSTGRES_URL: postgres://postgres:postgres@localhost:5432/test
          AWS_ACCESS_KEY_ID: minioadmin
          APP_POSTGRES_TIMEOUT: 120000
          AWS_SECRET_ACCESS_KEY: minioadmin
          AWS_ENDPOINT: http://localhost:9000
          AWS_BUCKET_PREFIX: local-pdc
          APP_REDIS_URL: redis://localhost:6379
          INTEGRATION_MAILER_SMTP_HOST: localhost
          APP_CEE_PUBLIC_KEY_PATH: ${{ github.workspace }}/docker/api/certs/publicKey.pem
          APP_CEE_PRIVATE_KEY_PATH: ${{ github.workspace }}/docker/api/certs/privateKey.pem
          APP_MAIL_SMTP_URL: smtp:localhost:1025
          APP_DATAGOUV_URL: null
          APP_DATAGOUV_KEY: null
          APP_JWT_SECRET: null
          AWS_REGION: fr-par
          NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
        run: ./integration.sh run
