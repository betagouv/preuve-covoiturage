name: 'Deploy dashboard and api - dev'

on:
  push:
    branches: [dev]

defaults:
  run:
    shell: bash

jobs:
  api-build:
    name: Build api
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Prepare Docker tag
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: betagouvpdc/api
          tag-latest: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build api image for test
        id: docker_test
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./
          file: ./docker/api/prod/Dockerfile
          load: true
          push: false
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: betagouvpdc/api:${{ steps.docker_meta.outputs.version }}
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        continue-on-error: true
        with:
          sarif_file: 'trivy-results.sarif'
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./docker/api/prod/Dockerfile
          push: true
          pull: false
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - run: echo ${{ steps.docker_build.outputs.digest }} > api.digest && cat api.digest
      - name: Upload Image digest
        uses: actions/upload-artifact@v3
        with:
          name: api.digest
          path: api.digest
  dashboard-build:
    name: Build dashboard
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Prepare Docker tag
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: betagouvpdc/dashboard
          tag-latest: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build dashboard image for test
        id: docker_test
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./
          file: ./docker/dashboard/prod/Dockerfile
          load: true
          push: false
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: betagouvpdc/dashboard:${{ steps.docker_meta.outputs.version }}
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        continue-on-error: true
        with:
          sarif_file: 'trivy-results.sarif'
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./docker/dashboard/prod/Dockerfile
          push: true
          pull: false
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - run: echo ${{ steps.docker_build.outputs.digest }} > dashboard.digest && cat dashboard.digest
      - name: Upload Image digest
        uses: actions/upload-artifact@v3
        with:
          name: dashboard.digest
          path: dashboard.digest
  deploy:
    name: Deploy
    needs: [api-build, dashboard-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout infra repo
        uses: actions/checkout@v3
        with:
          repository: betagouv/preuve-covoiturage-infra
          ssh-key: ${{ secrets.INFRA_SSH }}
          path: infra
      - name: Download dashboard digest
        id: dashboard-artifact
        uses: actions/download-artifact@v3
        with:
          name: dashboard.digest
          path: artifacts
      - name: Download api digest
        id: api-artifact
        uses: actions/download-artifact@v3
        with:
          name: api.digest
          path: artifacts
      - name: Update image digests
        run: |
          export API=$(cat artifacts/api.digest)
          export DASHBOARD=$(cat artifacts/dashboard.digest)
          sh infra/cluster/app/overlays/update.sh dev $API $DASHBOARD
      - name: Commit
        run: |
          cd infra
          git checkout -b update-${{ github.sha }}
          git add .
          git -c user.name="GitHub Actions" -c user.email="actions@github.com" \
            commit -m "Update dev image digest" \
            --author="${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>"
          git push --force --no-verify --set-upstream origin update-${{ github.sha }}
