name: "Quality - API"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  lint:
    name: Lint Api
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x
      - name: Run lint
        working-directory: ./api
        # FIXME
        continue-on-error: true
        run: deno lint

  test:
    needs: [lint]
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.deno
            ~/.cache/deno
          key: ${{ runner.os }}-deno-${{ hashFiles('**/deno.lock') }}
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x
      - uses: taiki-e/install-action@v2
        with:
          tool: just@1.40.0
      - name: Run unit test
        run: just cache && just ci_test_unit
        working-directory: api
        env:
          APP_POSTGRES_URL: postgres://
          APP_REDIS_URL: redis://

  codeql:
    needs: [test]
    name: CodeQL
    runs-on: ubuntu-latest

    strategy:
      matrix:
        language: ['javascript']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        config-file: ./.github/codeql/codeql-config.yml

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  integration:
    needs: [test]
    name: API integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build stack
        uses: ./.github/actions/build-stack
      - name: Run integration tests
        working-directory: api
        run: deno test --quiet --no-check -A --unsafely-ignore-certificate-errors '**/*.integration.spec.ts'
        env:
          APP_CEE_PRIVATE_KEY_PATH: ${{ github.workspace }}/docker/api/certs/privateKey.pem
          APP_CEE_PUBLIC_KEY_PATH: ${{ github.workspace }}/docker/api/certs/publicKey.pem
          APP_JWT_SECRET: 'integration-test'
          APP_MAIL_SMTP_URL: smtp://localhost:1025
          APP_POSTGRES_TIMEOUT: 120000
          APP_POSTGRES_URL: postgres://postgres:postgres@localhost:5432/test
          APP_REDIS_URL: redis://localhost:6379
          AWS_SECRET_ACCESS_KEY: minioadmin
          AWS_ACCESS_KEY_ID: minioadmin
          AWS_BUCKET_PREFIX: local-pdc
          AWS_ENDPOINT: https://s3.covoiturage.test
          AWS_REGION: fr-par
          INTEGRATION_MAILER_SMTP_HOST: localhost
          PRO_CONNECT_CLIENT_ID: ${{ secrets.PRO_CONNECT_CLIENT_ID }}
          PRO_CONNECT_CLIENT_SECRET: ${{ secrets.PRO_CONNECT_CLIENT_SECRET }}

  e2e:
    needs: [test]
    name: API e2e tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build stack
        uses: ./.github/actions/build-stack
      - name: Run e2e tests
        working-directory: api/e2e
        run: |
          deno test \
            --no-check \
            --quiet \
            --allow-net \
            --allow-env \
            --allow-import=cdn.esm.sh:443,deno.land:443,jsr.io:443 \
            --unsafely-ignore-certificate-errors
        env:
          APIE2E_API_URL: https://api.covoiturage.test
