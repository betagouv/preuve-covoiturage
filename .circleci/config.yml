version: 2.1
jobs:
  api-js:
    docker:
      - image: circleci/node:8
      - image: circleci/mongo:4.0
      - image: circleci/redis:4
    working_directory: ~/repo/api
    parallelism: 1
    environment:
      NODE_ENV: test
      MONGO_URL: mongodb://127.0.0.1:27017/pdc-test
      REDIS_URL: redis://127.0.0.1:6379
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn lint
      - run: yarn seed
      - run: yarn test

  api-core:
    docker:
      - image: circleci/node:8
    working_directory: ~/repo/api/core
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn lint
      - run:
          name: yarn tests with coverage
          command: |
            ./cc-test-reporter before-build
            yarn coverage-ci
            ./cc-test-reporter format-coverage -t lcov --prefix /repo/api/core
            ./cc-test-reporter upload-coverage

  front-angular:
    docker:
      - image: circleci/node:8
    working_directory: ~/repo/dashboard
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn lint
      - run: yarn build --configuration=production

workflows:
  version: 1
  backend-tests:
    jobs:
      #      - api-js
      - api-core
#  frontend-tests:
#    jobs:
#      - front-angular
