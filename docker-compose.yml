services:
  postgres:
    build:
      context: ./docker/postgres
    shm_size: 2g
    ports:
      - "${DC_POSTGRES_PORT:-5432}:5432"
    networks:
      - back
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'local'
      PGDATA: '/var/lib/postgresql/data/pgdata'
    command: ["postgres", "-c", "log_statement=all"]
    volumes:
      - ./db/postgres:/var/lib/postgresql/data/pgdata

  redis:
    build: './docker/redis'
    ports:
      - "${DC_REDIS_PORT:-6379}:6379"
    networks:
      - back

  mailer:
    image: mailhog/mailhog:v1.0.1
    environment:
      MH_CORS_ORIGIN: '*'
    ports:
      - 8025:8025
      - 1025:1025
    networks:
      - back

  s3:
    image: minio/minio
    environment: 
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin789456123
    networks:
      - back
    command: 'server /data --console-address ":9001"'
    volumes:
      - ./db/s3:/data
    ports:
      - 9000:9000
      - 9001:9001

  api:
    build:
      dockerfile: ./docker/api/Dockerfile
      context: .
    volumes:
      - ./api:/app/api:ro
      - ./shared:/app/shared:ro
      - ./tmp:/tmp
      - ./docker/api/certs:/app/certs:ro
    tty: true
    env_file: ./api/.env
    environment:
      PORT: 8080
      APP_RATE_LIMIT_MAX_FACTOR: '0'
    ports:
      - 8080:8080
    networks:
      - back
    depends_on:
      - redis
      - postgres
      - mailer
      - s3

  migrator:
    build:
      dockerfile: ./docker/api/Dockerfile
      context: .
    command: 'just migrate'
    tty: true
    env_file: ./api/.env
    networks:
      - back

  dashboard:
    build:
      dockerfile: ./docker/dashboard/Dockerfile
      context: .
    volumes:
      - ./dashboard:/app/dashboard
      - ./docker/dashboard/dev.env.js:/app/dashboard/src/assets/env.js:ro
      - ./shared:/app/shared:ro
    tty: true
    ports:
      - 4200:4200
    depends_on:
      - api

  k6:
    image: 'grafana/k6:latest'
    tty: true
    environment:
      - LOAD_BASE_URL=http://api:8080
    working_dir: /k6
    volumes:
      - ./api-load-testing:/k6:ro
    networks:
      - back

networks:
  back:
