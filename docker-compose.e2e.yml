services:

  api:
    ports:
      - 8080:8080
    environment:
      APP_POSTGRES_URL: postgres://postgres:postgres@postgres:5432/test
      APP_REDIS_URL: redis://redis:6379/1
      APIE2E_API_URL: https://api.covoiturage.test
      APIE2E_AUTH_ACCESSKEY: admin@example.com
      APIE2E_AUTH_SECRETKEY: password
    volumes:
      - ./docker/api/certs:/app/certs:ro

  postgres:
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test

  redis:
    ports:
      - 6379:6379

  mailer:
    ports:
      - 1025:1025

  wait:
    image: busybox:1.33
    environment:
      DOMAIN: ${WAIT_DOMAIN:-api}
      PORT: ${WAIT_PORT:-8080}
    working_dir: /app/api
    command: ['/bin/sh', '-c', 'until nc -zv $$DOMAIN $$PORT -w1; do echo " Waiting for $$DOMAIN..."; sleep 1; done']
    networks:
      - back

  s3:
    image: minio/minio:edge
    networks:
      - back
    command: 'server /data'
    ports:
      - "9000:9000"
    environment:
      MINIO_DOMAIN: s3.covoiturage.test
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.s3.rule=Host(`s3.covoiturage.test`, `local-pdc-export.s3.covoiturage.test`, `download.covoiturage.test`, `cms.s3.covoiturage.test`)'
      - 'traefik.http.routers.s3.entrypoints=websecure'
      - 'traefik.http.routers.s3.tls=true'
      - 'traefik.http.services.s3.loadbalancer.server.port=9000'

  s3-init:
    image: minio/mc:edge
    networks:
      - back
    environment:
      MINIO_URL: http://s3:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_REGION_NAME: fr-par
    entrypoint:
      ['sh', '-c', 'mc alias set minio $$MINIO_URL $$MINIO_ACCESS_KEY $$MINIO_SECRET_KEY && mc mb minio/$$BUCKET']
    depends_on:
      - s3

networks:
  front:
  back:
