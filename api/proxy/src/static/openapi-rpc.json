{
  "x-send-defaults": true,
  "openapi": "3.0.2",
  "x-api-id": "registre-preuve-covoiturage",
  "info": {
    "description": "Le registre de preuve de covoiturage est à la fois un label et une plate-forme technique pour\n\ndistribuer à grande échelle des incitations monétaires ou non monétaires, sans risque de\n\nfraude massive.",
    "version": "1.0.0",
    "title": "Api client du Registre de Preuve de Covoiturage",
    "termsOfService": "https://registre-preuve-de-covoiturage.gitbook.io/produit/cgu",
    "contact": {
      "email": "contact@covoiturage.beta.gouv.fr"
    },
    "license": {
      "name": "GNU Affero General Public License v3.0",
      "url": "https://github.com/betagouv/preuve-covoiturage/blob/master/LICENSE"
    }
  },
  "servers": [
    {
      "url": "https://api.covoiturage.beta.gouv.fr",
      "description": "prod"
    },
    {
      "url": "https://api-staging.covoiturage.beta.gouv.fr",
      "description": "staging"
    },
    {
      "url": "http://localhost:8080",
      "description": "local"
    }
  ],
  "paths": {
    "/": {
      "post": {
        "operationId": "post",
        "deprecated": false,
        "summary": "",
        "description": "",
        "tags": ["JSONRPC"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/user.create.response"
                    },
                    {
                      "$ref": "#/components/schemas/user.login.response"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequestError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "ForbiddenError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "NotFoundError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "ConflictError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/JsonRpcRequest"
                  },
                  {
                    "properties": {
                      "params": {
                        "title": "parameters",
                        "oneOf": [
                          {
                            "type": "object"
                          },
                          {
                            "type": "array"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "x-headers": [],
  "x-explorer-enabled": true,
  "x-proxy-enabled": true,
  "x-samples-enabled": true,
  "x-samples-languages": ["javascript"],
  "components": {
    "schemas": {
      "user.create": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.create"
              },
              "params": {
                "title": "Parameters",
                "type": "object",
                "required": ["email", "lastname", "firstname", "group"],
                "additionalProperties": false,
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "firstname": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "group": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "operator": {
                    "type": "string"
                  },
                  "territory": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.changeEmail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.changeEmail"
              },
              "params": {
                "title": "Parameters",
                "type": "object",
                "required": ["_id", "email"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.changePassword": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.changePassword"
              },
              "params": {
                "title": "Parameters",
                "required": ["oldPassword", "newPassword"],
                "additionalProperties": false,
                "properties": {
                  "oldPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.changeRole": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.changeRole"
              },
              "params": {
                "title": "Parameters",
                "required": ["_id", "role"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.confirmEmail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.confirmEmail"
              },
              "params": {
                "title": "Parameters",
                "required": ["confirm", "token"],
                "additionalProperties": false,
                "properties": {
                  "confirm": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.delete": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.delete"
              },
              "params": {
                "title": "Parameters",
                "type": "object",
                "required": ["_id"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.find": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.find"
              },
              "params": {
                "title": "Parameters",
                "required": ["_id"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.forgottenPassword": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.forgottenPassword"
              },
              "params": {
                "title": "Parameters",
                "required": ["email"],
                "additionalProperties": false,
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.list": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.list"
              },
              "params": {
                "title": "Parameters",
                "type": "object",
                "properties": {
                  "page": {
                    "type": "number",
                    "default": 1
                  },
                  "limit": {
                    "type": "number",
                    "default": 1
                  }
                }
              }
            }
          }
        ]
      },
      "user.login": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.login"
              },
              "params": {
                "title": "Parameters",
                "required": ["password", "email"],
                "additionalProperties": false,
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.patch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.patch"
              },
              "params": {
                "title": "Parameters",
                "type": "object",
                "required": ["_id", "patch"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "patch": {
                    "type": "object",
                    "minProperties": 1,
                    "additionalProperties": false,
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "lastname": {
                        "type": "string"
                      },
                      "firstname": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "user.resetPassword": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.resetPassword"
              },
              "params": {
                "title": "Parameters",
                "required": ["token", "reset", "password"],
                "additionalProperties": false,
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "reset": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "territory.all": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "territory.all"
              }
            }
          }
        ]
      },
      "territory.patch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "territory.patch"
              },
              "params": {
                "title": "territory",
                "required": ["_id", "patch"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "patch": {
                    "type": "object",
                    "minProperties": 1,
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "shortname": {
                        "type": "string"
                      },
                      "acronym": {
                        "type": "string"
                      },
                      "insee": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "insee_main": {
                        "type": "string"
                      },
                      "network_id": {
                        "type": "integer"
                      },
                      "company": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Company"
                          },
                          {
                            "properties": {
                              "region": {
                                "type": "string"
                              }
                            }
                          }
                        ]
                      },
                      "address": {
                        "$ref": "#/components/schemas/Address"
                      },
                      "bank": {
                        "$ref": "#/components/schemas/Bank"
                      },
                      "contacts": {
                        "$ref": "#/components/schemas/Contacts"
                      },
                      "cgu": {
                        "$ref": "#/components/schemas/CGU"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "operator.all": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "operator.all"
              }
            }
          }
        ]
      },
      "operator.patch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "operator.patch"
              },
              "params": {
                "title": "Parameters",
                "required": ["_id", "patch"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "patch": {
                    "type": "object",
                    "minProperties": 1,
                    "additionalProperties": false,
                    "properties": {
                      "nom_commercial": {
                        "type": "string"
                      },
                      "raison_sociale": {
                        "type": "string"
                      },
                      "company": {
                        "$ref": "#/components/schemas/Company"
                      },
                      "address": {
                        "$ref": "#/components/schemas/Address"
                      },
                      "bank": {
                        "$ref": "#/components/schemas/Bank"
                      },
                      "contacts": {
                        "$ref": "#/components/schemas/Contacts"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "user.create.response": {
        "$ref": "#/components/schemas/User"
      },
      "user.login.response": {
        "$ref": "#/components/schemas/User"
      },
      "User": {
        "type": "object",
        "required": ["_id", "email", "lastname", "firstname", "group"],
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "territory": {
            "type": "string"
          }
        }
      },
      "Company": {
        "type": "object",
        "required": ["siren"],
        "additionalProperties": false,
        "properties": {
          "siren": {
            "type": "string"
          },
          "naf_etablissement": {
            "type": "string"
          },
          "naf_entreprise": {
            "type": "string"
          },
          "nature_juridique": {
            "type": "string"
          },
          "cle_nic": {
            "type": "string"
          },
          "rna": {
            "type": "string"
          },
          "vat_intra": {
            "type": "string"
          }
        }
      },
      "Address": {
        "type": "object",
        "required": ["street", "city", "country", "postcode"],
        "additionalProperties": false,
        "properties": {
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "cedex": {
            "type": "string"
          }
        }
      },
      "Bank": {
        "type": "object",
        "required": ["bank_name", "client_name", "iban", "bic"],
        "additionalProperties": false,
        "properties": {
          "bank_name": {
            "type": "string"
          },
          "client_name": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "bic": {
            "type": "string"
          }
        }
      },
      "Contacts": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rgpd_dpo": {
            "type": "string"
          },
          "rgpd_controller": {
            "type": "string"
          },
          "technical": {
            "type": "string"
          }
        }
      },
      "CGU": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "accepted": {
            "type": "boolean",
            "default": false
          },
          "acceptedAt": {
            "type": "string"
          },
          "acceptedBy": {
            "type": "string"
          }
        }
      },
      "JsonRpcRequest": {
        "type": "object",
        "required": ["method", "id", "jsonrpc"],
        "properties": {
          "method": {
            "type": "string",
            "description": "Method name"
          },
          "id": {
            "type": "integer",
            "default": 1,
            "format": "int32",
            "description": "Request ID"
          },
          "jsonrpc": {
            "type": "string",
            "default": "2.0",
            "description": "JSON-RPC Version (2.0)"
          }
        },
        "discriminator": {
          "propertyName": "method_name"
        }
      },
      "Error": {
        "required": ["name", "message"],
        "properties": {
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": []
}
