{
  "x-send-defaults": true,
  "openapi": "3.0.1",
  "x-api-id": "registre-preuve-covoiturage",
  "info": {
    "description": "Le registre de preuve de covoiturage est à la fois un label et une plate-forme technique pour\n\ndistribuer à grande échelle des incitations monétaires ou non monétaires, sans risque de\n\nfraude massive.",
    "version": "1.0.0",
    "title": "Api client du Registre de Preuve de Covoiturage",
    "termsOfService": "https://registre-preuve-de-covoiturage.gitbook.io/produit/cgu",
    "contact": {
      "email": "contact@covoiturage.beta.gouv.fr"
    },
    "license": {
      "name": "GNU Affero General Public License v3.0",
      "url": "https://github.com/betagouv/preuve-covoiturage/blob/master/LICENSE"
    }
  },
  "servers": [
    {
      "url": "https://api.covoiturage.beta.gouv.fr",
      "description": "prod"
    },
    {
      "url": "https://api-staging.covoiturage.beta.gouv.fr",
      "description": "staging"
    },
    {
      "url": "http://localhost:8080",
      "description": "local"
    }
  ],
  "paths": {
    "/": {
      "post": {
        "operationId": "post",
        "deprecated": false,
        "summary": "",
        "description": "",
        "tags": ["JSONRPC"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/user.create.response"
                    },
                    {
                      "$ref": "#/components/schemas/user.login.response"
                    },
                    {
                      "$ref": "#/components/schemas/user.patch.response"
                    },
                    {
                      "$ref": "#/components/schemas/user.read.response"
                    },
                    {
                      "$ref": "#/components/schemas/user.list.response"
                    },
                    {
                      "$ref": "#/components/schemas/trip.list.response"
                    },
                    {
                      "$ref": "#/components/schemas/territory.list.response"
                    },
                    {
                      "$ref": "#/components/schemas/territory.read.response"
                    },
                    {
                      "$ref": "#/components/schemas/operator.create.response"
                    },
                    {
                      "$ref": "#/components/schemas/operator.list.response"
                    },
                    {
                      "$ref": "#/components/schemas/operator.patch.response"
                    },
                    {
                      "$ref": "#/components/schemas/operator.read.response"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequestError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "ForbiddenError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "NotFoundError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "ConflictError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/application.all"
                  },
                  {
                    "$ref": "#/components/schemas/application.create"
                  },
                  {
                    "$ref": "#/components/schemas/application.find"
                  },
                  {
                    "$ref": "#/components/schemas/application.revoke"
                  },
                  {
                    "$ref": "#/components/schemas/operator.all"
                  },
                  {
                    "$ref": "#/components/schemas/operator.patch"
                  },
                  {
                    "$ref": "#/components/schemas/territory.all"
                  },
                  {
                    "$ref": "#/components/schemas/territory.patch"
                  },
                  {
                    "$ref": "#/components/schemas/trip.list"
                  },
                  {
                    "$ref": "#/components/schemas/user.create"
                  },
                  {
                    "$ref": "#/components/schemas/user.changeEmail"
                  },
                  {
                    "$ref": "#/components/schemas/user.changePassword"
                  },
                  {
                    "$ref": "#/components/schemas/user.changeRole"
                  },
                  {
                    "$ref": "#/components/schemas/user.confirmEmail"
                  },
                  {
                    "$ref": "#/components/schemas/user.delete"
                  },
                  {
                    "$ref": "#/components/schemas/user.find"
                  },
                  {
                    "$ref": "#/components/schemas/user.forgottenPassword"
                  },
                  {
                    "$ref": "#/components/schemas/user.list"
                  },
                  {
                    "$ref": "#/components/schemas/user.login"
                  },
                  {
                    "$ref": "#/components/schemas/user.patch"
                  },
                  {
                    "$ref": "#/components/schemas/user.resetPassword"
                  }
                ]
              },
              "example": {
                "method": "user.create",
                "id": 1,
                "params": {
                  "email": "example@domaine.com",
                  "lastname": "john",
                  "firstname": "scodt",
                  "phone": "0513452745",
                  "group": "operator",
                  "role": "user",
                  "operator": "5d0b616f9f611aef34deb304"
                }
              }
            }
          }
        }
      }
    }
  },
  "x-headers": [],
  "x-explorer-enabled": true,
  "x-proxy-enabled": true,
  "x-samples-enabled": true,
  "x-samples-languages": ["javascript"],
  "components": {
    "schemas": {
      "application.all": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "application.all"
              }
            }
          }
        ]
      },
      "application.create": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "application.create"
              },
              "params": {
                "$ref": "#/components/schemas/Application"
              }
            }
          }
        ]
      },
      "application.find": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "application.find"
              },
              "params": {
                "type": "object",
                "required": ["_id"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "operator_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "application.revoke": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "application.revoke"
              },
              "params": {
                "type": "object",
                "required": ["_id"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "operator.all": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "operator.all"
              }
            }
          }
        ]
      },
      "operator.patch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "operator.patch"
              },
              "params": {
                "title": "Parameters",
                "required": ["_id", "patch"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "patch": {
                    "type": "object",
                    "minProperties": 1,
                    "required": ["nom_commercial", "raison_sociale"],
                    "additionalProperties": false,
                    "properties": {
                      "nom_commercial": {
                        "type": "string"
                      },
                      "raison_sociale": {
                        "type": "string"
                      },
                      "company": {
                        "$ref": "#/components/schemas/Company"
                      },
                      "address": {
                        "$ref": "#/components/schemas/Address"
                      },
                      "bank": {
                        "$ref": "#/components/schemas/Bank"
                      },
                      "contacts": {
                        "$ref": "#/components/schemas/Contacts"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "territory.all": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "territory.all"
              }
            }
          }
        ]
      },
      "territory.patch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "territory.patch"
              },
              "params": {
                "title": "territory",
                "required": ["_id", "patch"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "patch": {
                    "type": "object",
                    "minProperties": 1,
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "shortname": {
                        "type": "string"
                      },
                      "acronym": {
                        "type": "string"
                      },
                      "insee": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "insee_main": {
                        "type": "string"
                      },
                      "network_id": {
                        "type": "integer"
                      },
                      "company": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Company"
                          },
                          {
                            "properties": {
                              "region": {
                                "type": "string"
                              }
                            }
                          }
                        ]
                      },
                      "address": {
                        "$ref": "#/components/schemas/Address"
                      },
                      "bank": {
                        "$ref": "#/components/schemas/Bank"
                      },
                      "contacts": {
                        "$ref": "#/components/schemas/Contacts"
                      },
                      "cgu": {
                        "$ref": "#/components/schemas/CGU"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "trip.list": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "trip.list"
              },
              "params": {
                "title": "Parameters",
                "type": "object",
                "properties": {
                  "page": {
                    "type": "number",
                    "default": 1
                  },
                  "limit": {
                    "type": "number",
                    "default": 1
                  }
                }
              }
            }
          }
        ]
      },
      "user.create": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.create"
              },
              "params": {
                "title": "Parameters",
                "type": "object",
                "required": ["email", "lastname", "firstname", "group"],
                "additionalProperties": false,
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "firstname": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "group": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "operator": {
                    "type": "string"
                  },
                  "territory": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.changeEmail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.changeEmail"
              },
              "params": {
                "title": "Parameters",
                "type": "object",
                "required": ["_id", "email"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.changePassword": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.changePassword"
              },
              "params": {
                "title": "Parameters",
                "required": ["oldPassword", "newPassword"],
                "additionalProperties": false,
                "properties": {
                  "oldPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.changeRole": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.changeRole"
              },
              "params": {
                "title": "Parameters",
                "required": ["_id", "role"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.confirmEmail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.confirmEmail"
              },
              "params": {
                "title": "Parameters",
                "required": ["confirm", "token"],
                "additionalProperties": false,
                "properties": {
                  "confirm": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.delete": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.delete"
              },
              "params": {
                "title": "Parameters",
                "type": "object",
                "required": ["_id"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.find": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.find"
              },
              "params": {
                "title": "Parameters",
                "required": ["_id"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.forgottenPassword": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.forgottenPassword"
              },
              "params": {
                "title": "Parameters",
                "required": ["email"],
                "additionalProperties": false,
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.list": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.list"
              },
              "params": {
                "title": "Parameters",
                "type": "object",
                "properties": {
                  "page": {
                    "type": "number",
                    "default": 1
                  },
                  "limit": {
                    "type": "number",
                    "default": 1
                  }
                }
              }
            }
          }
        ]
      },
      "user.login": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.login"
              },
              "params": {
                "title": "Parameters",
                "required": ["password", "email"],
                "additionalProperties": false,
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "user.patch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.patch"
              },
              "params": {
                "title": "Parameters",
                "type": "object",
                "required": ["_id", "patch"],
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "patch": {
                    "type": "object",
                    "minProperties": 1,
                    "additionalProperties": false,
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "lastname": {
                        "type": "string"
                      },
                      "firstname": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "user.resetPassword": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "description": "user.resetPassword"
              },
              "params": {
                "title": "Parameters",
                "required": ["token", "reset", "password"],
                "additionalProperties": false,
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "reset": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "application.create.response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Application"
          },
          {
            "properties": {
              "_id": {
                "type": "string"
              }
            }
          }
        ]
      },
      "application.list.response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Application"
          },
          {
            "properties": {
              "_id": {
                "type": "string"
              }
            }
          }
        ]
      },
      "application.patch.response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Application"
          },
          {
            "properties": {
              "_id": {
                "type": "string"
              }
            }
          }
        ]
      },
      "application.revoke.response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Application"
          },
          {
            "properties": {
              "_id": {
                "type": "string"
              }
            }
          }
        ]
      },
      "operator.create.response": {
        "$ref": "#/components/schemas/Operator"
      },
      "operator.list.response": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Operator"
        }
      },
      "operator.patch.response": {
        "$ref": "#/components/schemas/Operator"
      },
      "operator.read.response": {
        "$ref": "#/components/schemas/Operator"
      },
      "territory.list.response": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Territory"
        }
      },
      "territory.read.response": {
        "$ref": "#/components/schemas/Territory"
      },
      "trip.list.response": {
        "$ref": "#/components/schemas/Trip"
      },
      "user.create.response": {
        "$ref": "#/components/schemas/User"
      },
      "user.login.response": {
        "$ref": "#/components/schemas/User"
      },
      "user.list.response": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "user.patch.response": {
        "$ref": "#/components/schemas/User"
      },
      "user.read.response": {
        "$ref": "#/components/schemas/User"
      },
      "Address": {
        "type": "object",
        "required": ["street", "city", "country", "postcode"],
        "additionalProperties": false,
        "properties": {
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "cedex": {
            "type": "string"
          }
        }
      },
      "Application": {
        "type": "object",
        "required": ["name", "operator_id", "permissions"],
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "operator_id": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Bank": {
        "type": "object",
        "required": ["bank_name", "client_name", "iban", "bic"],
        "additionalProperties": false,
        "properties": {
          "bank_name": {
            "type": "string"
          },
          "client_name": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "bic": {
            "type": "string"
          }
        }
      },
      "CGU": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "accepted": {
            "type": "boolean",
            "default": false
          },
          "acceptedAt": {
            "type": "string"
          },
          "acceptedBy": {
            "type": "string"
          }
        }
      },
      "Company": {
        "type": "object",
        "required": ["siren"],
        "additionalProperties": false,
        "properties": {
          "siren": {
            "type": "string"
          },
          "naf_etablissement": {
            "type": "string"
          },
          "naf_entreprise": {
            "type": "string"
          },
          "nature_juridique": {
            "type": "string"
          },
          "cle_nic": {
            "type": "string"
          },
          "rna": {
            "type": "string"
          },
          "vat_intra": {
            "type": "string"
          }
        }
      },
      "Contacts": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rgpd_dpo": {
            "type": "string"
          },
          "rgpd_controller": {
            "type": "string"
          },
          "technical": {
            "type": "string"
          }
        }
      },
      "Identity": {
        "type": "object",
        "required": ["phone"],
        "additionalProperties": false,
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "over_18": {
            "enum": [true, false, null],
            "default": null
          },
          "travel_pass": {
            "$ref": "#/components/schemas/TravelPass"
          }
        }
      },
      "Incentive": {
        "type": "object",
        "additionalProperties": false,
        "minProperties": 3,
        "properties": {
          "index": {
            "type": "integer",
            "minimum": 0
          },
          "siret": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "minimum": -200,
            "maximum": 200
          }
        }
      },
      "Journey": {
        "type": "object",
        "required": ["journey_id", "operator_class"],
        "anyOf": [
          {
            "required": ["passenger"]
          },
          {
            "required": ["driver"]
          }
        ],
        "additionalProperties": false,
        "properties": {
          "journey_id": {
            "type": "string"
          },
          "operator_id": {
            "type": "string"
          },
          "operator_journey_id": {
            "type": "string"
          },
          "operator_class": {
            "enum": ["A", "B", "C"]
          },
          "passenger": {
            "type": "object",
            "required": ["identity", "start", "end", "contribution", "incentives"],
            "additionalProperties": false,
            "properties": {
              "identity": {
                "$ref": "#/components/schemas/Identity"
              },
              "start": {
                "$ref": "#/components/schemas/Position"
              },
              "end": {
                "$ref": "#/components/schemas/Position"
              },
              "seats": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 8
              },
              "expense": {
                "type": "integer",
                "minimum": 0,
                "maximum": 1000000
              },
              "contribution": {
                "type": "integer",
                "minimum": 0,
                "maximum": 1000000
              },
              "incentives": {
                "type": "array",
                "minItems": 0,
                "items": {
                  "$ref": "#/components/schemas/Incentive"
                }
              },
              "distance": {
                "type": "integer",
                "minimum": 0,
                "maximum": 1000000
              },
              "duration": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400
              }
            }
          },
          "driver": {
            "type": "object",
            "required": ["identity", "start", "end", "revenue", "incentives"],
            "additionalProperties": false,
            "properties": {
              "identity": {
                "$ref": "#/components/schemas/Identity"
              },
              "start": {
                "$ref": "#/components/schemas/Position"
              },
              "end": {
                "$ref": "#/components/schemas/Position"
              },
              "expense": {
                "type": "integer",
                "minimum": 0,
                "maximum": 1000000
              },
              "revenue": {
                "type": "integer",
                "minimum": 0,
                "maximum": 1000000
              },
              "incentives": {
                "type": "array",
                "minItems": 0,
                "maxItems": 20,
                "items": {
                  "$ref": "#/components/schemas/Incentive"
                }
              },
              "distance": {
                "type": "integer",
                "minimum": 0,
                "maximum": 1000000
              },
              "duration": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400
              }
            }
          }
        }
      },
      "Operator": {
        "type": "object",
        "required": ["nom_commercial", "raison_sociale"],
        "additionalProperties": false,
        "properties": {
          "nom_commercial": {
            "type": "string"
          },
          "raison_sociale": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "bank": {
            "$ref": "#/components/schemas/Bank"
          },
          "contacts": {
            "$ref": "#/components/schemas/Contacts"
          }
        }
      },
      "Person": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "journey_id",
          "identity",
          "is_driver",
          "start",
          "end",
          "cost",
          "expense",
          "operator_class",
          "operator"
        ],
        "properties": {
          "journey_id": {
            "type": "string"
          },
          "class": {
            "type": "string",
            "maxLength": 1,
            "enum": ["A", "B", "C", "Z"]
          },
          "identity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              },
              {
                "properties": {
                  "over_18": {
                    "type": "boolean",
                    "default": true
                  }
                }
              }
            ]
          },
          "is_driver": {
            "type": "boolean"
          },
          "start": {
            "$ref": "#/components/schemas/Position"
          },
          "end": {
            "$ref": "#/components/schemas/Position"
          },
          "seats": {
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "maximum": 8
          },
          "expense": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1000000
          },
          "contribution": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1000000
          },
          "revenue": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1000000
          },
          "cost": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1000000
          },
          "remaining_fee": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1000000
          },
          "incentives": {
            "type": "array",
            "minItems": 0,
            "items": {
              "$ref": "#/components/schemas/Incentive"
            }
          },
          "distance": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1000000
          },
          "duration": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100000
          },
          "operator_class": {
            "type": "string",
            "maxLength": 1,
            "enum": ["A", "B", "C", "Z"]
          },
          "operator": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "validation": {
            "type": "object",
            "additionalProperties": false,
            "required": ["step", "rank"],
            "properties": {
              "step": {
                "type": "integer",
                "minimum": 1,
                "maximum": 10
              },
              "validated": {
                "type": "boolean",
                "default": false
              },
              "validatedAt": {
                "type": "string"
              },
              "tests": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "rank": {
                "type": "string",
                "maxLength": 1,
                "enum": ["A", "B", "C", "Z"]
              }
            }
          }
        }
      },
      "Position": {
        "type": "object",
        "required": ["datetime"],
        "additionalProperties": false,
        "minProperties": 2,
        "properties": {
          "datetime": {
            "type": "string"
          },
          "lat": {
            "type": "number"
          },
          "lon": {
            "type": "number"
          },
          "insee": {
            "type": "string"
          },
          "postcodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 0
          },
          "literal": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "Territory": {
        "type": "object",
        "required": ["name"],
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shortname": {
            "type": "string"
          },
          "acronym": {
            "type": "string"
          },
          "insee": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "insee_main": {
            "type": "string"
          },
          "network_id": {
            "type": "integer"
          },
          "company": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Company"
              },
              {
                "properties": {
                  "region": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "bank": {
            "$ref": "#/components/schemas/Bank"
          },
          "contacts": {
            "$ref": "#/components/schemas/Contacts"
          },
          "cgu": {
            "$ref": "#/components/schemas/CGU"
          }
        }
      },
      "TravelPass": {
        "type": "object",
        "required": ["name", "userId"],
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "Trip": {
        "type": "object",
        "required": ["operator_id", "people"],
        "additionalProperties": false,
        "properties": {
          "operator_id": {
            "type": "string"
          },
          "operator_journey_id": {
            "type": "string"
          },
          "territory": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": ["pending", "active", "error"],
            "default": "pending"
          },
          "start": {
            "type": "string"
          },
          "people": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "required": ["_id", "email", "lastname", "firstname", "group"],
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "territory": {
            "type": "string"
          }
        }
      },
      "JsonRpcRequest": {
        "type": "object",
        "required": ["method", "id", "jsonrpc"],
        "properties": {
          "method": {
            "type": "string",
            "description": "Method name"
          },
          "id": {
            "type": "integer",
            "default": 1,
            "format": "int32",
            "description": "Request ID"
          },
          "jsonrpc": {
            "type": "string",
            "default": "2.0",
            "description": "JSON-RPC Version (2.0)"
          }
        },
        "discriminator": {
          "propertyName": "method_name"
        }
      },
      "Error": {
        "required": ["name", "message"],
        "properties": {
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": []
}
