import { assertEquals, assertThrows, it } from "@/dev_deps.ts";

import type { GeoJSON } from "@/pdc/services/geo/contracts/GeoJson.ts";
import { StatelessContext } from "../entities/Context.ts";
import { generateCarpool } from "../tests/helpers.ts";
import { isStartAndEndInside, isStartAndEndInsideOrThrow } from "./isStartAndEndInside.ts";

const startIn = {
  lat: 48.1148,
  lon: -1.6792,
};

const endIn = {
  lat: 48.1257,
  lon: -1.6588,
};

const startOut = {
  lat: 48.1142,
  lon: -1.6175,
};

const endOut = {
  lat: 48.1345,
  lon: -1.6924,
};

const lignesTCRennes: GeoJSON = {
  coordinates: [
    [
      [
        [
          -1.638948103907376,
          48.09147699849534,
        ],
        [
          -1.636795806096824,
          48.08932016578465,
        ],
        [
          -1.636429792741697,
          48.086587355320134,
        ],
        [
          -1.638116668019853,
          48.08408717357746,
        ],
        [
          -1.641420167739982,
          48.08246586417821,
        ],
        [
          -1.653576543852361,
          48.08232129182403,
        ],
        [
          -1.659312733643364,
          48.08104042207028,
        ],
        [
          -1.676148915756742,
          48.08145669251199,
        ],
        [
          -1.679936360958917,
          48.08284520814578,
        ],
        [
          -1.682303918387132,
          48.085193991177626,
        ],
        [
          -1.683335863247037,
          48.100250564600934,
        ],
        [
          -1.686921338431296,
          48.10034980257605,
        ],
        [
          -1.691778233004759,
          48.099660228391464,
        ],
        [
          -1.690030219517554,
          48.09763442229493,
        ],
        [
          -1.689552871984661,
          48.09517213113651,
        ],
        [
          -1.690495651254111,
          48.09287383790781,
        ],
        [
          -1.692871744243382,
          48.090697855291225,
        ],
        [
          -1.70117583014511,
          48.086625347312825,
        ],
        [
          -1.704565767627273,
          48.086301922575394,
        ],
        [
          -1.708050088303171,
          48.08702712742812,
        ],
        [
          -1.711678996723696,
          48.09009667533552,
        ],
        [
          -1.711934794653844,
          48.09253525031568,
        ],
        [
          -1.710542530331177,
          48.094819046415445,
        ],
        [
          -1.713167967028094,
          48.09730073615155,
        ],
        [
          -1.714528689332605,
          48.10067259101234,
        ],
        [
          -1.714533438600843,
          48.10356828141405,
        ],
        [
          -1.713085297700747,
          48.106308461169775,
        ],
        [
          -1.70999577934603,
          48.10876136156187,
        ],
        [
          -1.705610309499877,
          48.11031366309299,
        ],
        [
          -1.692706736627799,
          48.11045619846096,
        ],
        [
          -1.6873340295244,
          48.111512437062814,
        ],
        [
          -1.695498130334795,
          48.115958309962366,
        ],
        [
          -1.71525841591912,
          48.11650349589571,
        ],
        [
          -1.718963367992966,
          48.11914930206418,
        ],
        [
          -1.719389789259615,
          48.122619022697435,
        ],
        [
          -1.716562826636009,
          48.12554102131891,
        ],
        [
          -1.711888953722239,
          48.126695172818316,
        ],
        [
          -1.69165652469281,
          48.126933851579714,
        ],
        [
          -1.686184637480305,
          48.12568729343689,
        ],
        [
          -1.682475566435195,
          48.12283150017781,
        ],
        [
          -1.674174639949648,
          48.123897051607386,
        ],
        [
          -1.668252014437109,
          48.1318090381665,
        ],
        [
          -1.664171011236432,
          48.13385140874144,
        ],
        [
          -1.659529380480262,
          48.13471457529055,
        ],
        [
          -1.653990452807529,
          48.13477970023785,
        ],
        [
          -1.649867349681107,
          48.133867803773285,
        ],
        [
          -1.64607659341651,
          48.13156911020507,
        ],
        [
          -1.644126682636015,
          48.1282538743125,
        ],
        [
          -1.640861776345678,
          48.12760146240146,
        ],
        [
          -1.634517565315949,
          48.13114970930476,
        ],
        [
          -1.628450953201108,
          48.132617870678345,
        ],
        [
          -1.626471721135549,
          48.1347929820377,
        ],
        [
          -1.62330281648268,
          48.13650234045506,
        ],
        [
          -1.619039279633223,
          48.1369739433029,
        ],
        [
          -1.614843233880076,
          48.13580889850581,
        ],
        [
          -1.612412124394998,
          48.1335998304304,
        ],
        [
          -1.611952655713098,
          48.13072368923329,
        ],
        [
          -1.614233053193967,
          48.125541893567544,
        ],
        [
          -1.618157444447494,
          48.122776490168874,
        ],
        [
          -1.621965669179866,
          48.121835432287206,
        ],
        [
          -1.62620392262285,
          48.12188680490278,
        ],
        [
          -1.632862912237619,
          48.11810864153511,
        ],
        [
          -1.639633270615898,
          48.11650841274539,
        ],
        [
          -1.652737940268052,
          48.11744860352618,
        ],
        [
          -1.656322765540391,
          48.11889973087066,
        ],
        [
          -1.658567604402116,
          48.12098947002866,
        ],
        [
          -1.659444111560055,
          48.1182566862215,
        ],
        [
          -1.661414787929339,
          48.116020216991295,
        ],
        [
          -1.668127076001682,
          48.11343046529089,
        ],
        [
          -1.663039946790389,
          48.11034601855237,
        ],
        [
          -1.661083168771699,
          48.10645716189524,
        ],
        [
          -1.663653443996232,
          48.0995312295473,
        ],
        [
          -1.666819382221401,
          48.0965819552396,
        ],
        [
          -1.666426819031004,
          48.09193779869726,
        ],
        [
          -1.661176496462798,
          48.091849230170666,
        ],
        [
          -1.654503787296973,
          48.09313407118887,
        ],
        [
          -1.643028958335048,
          48.09280806606998,
        ],
        [
          -1.638948103907376,
          48.09147699849534,
        ],
      ],
    ],
  ],
  type: "MultiPolygon",
};

function setup(start_lat: number, start_lon: number, end_lat: number, end_lon: number) {
  return StatelessContext.fromCarpool(
    1,
    generateCarpool({ start_lat, start_lon, end_lat, end_lon }),
  );
}

it("Should return true if start and end is in Rennes TC shape", () => {
  const ctx = setup(startIn.lat, startIn.lon, endIn.lat, endIn.lon);
  const res = isStartAndEndInside(ctx, lignesTCRennes);
  assertEquals(res, true);
});

it("Should return false if start point is not in Rennes TC shape", () => {
  const ctx = setup(startOut.lat, startOut.lon, endIn.lat, endIn.lon);
  const res = isStartAndEndInside(ctx, lignesTCRennes);
  assertEquals(res, false);
});

it("Should return false if start and end point is not in Rennes TC shape", () => {
  const ctx = setup(startOut.lat, startOut.lon, endOut.lat, endOut.lon);
  const res = isStartAndEndInside(ctx, lignesTCRennes);
  assertEquals(res, false);
});

it("Should throw if start and end point is in Rennes TC shape", () => {
  const ctx = setup(startIn.lat, startIn.lon, endIn.lat, endIn.lon);
  assertThrows(
    () => {
      isStartAndEndInsideOrThrow(ctx, lignesTCRennes);
    },
  );
});
